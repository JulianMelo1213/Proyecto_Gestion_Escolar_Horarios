// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto_Gestion_Escolar_Horarios.Models;

#nullable disable

namespace Proyecto_Gestion_Escolar_Horarios.Migrations
{
    [DbContext(typeof(GestionEstudiantesContext))]
    [Migration("20240718145259_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Proyecto_Gestion_Escolar_Horarios.Models.Aula", b =>
                {
                    b.Property<int>("AulaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AulaId"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AulaId")
                        .HasName("PK__Aulas__A8529BF8DB5BFD62");

                    b.ToTable("Aulas");
                });

            modelBuilder.Entity("Proyecto_Gestion_Escolar_Horarios.Models.Clase", b =>
                {
                    b.Property<int>("ClaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClaseId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProfesorId")
                        .HasColumnType("int");

                    b.HasKey("ClaseId")
                        .HasName("PK__Clases__F542955360233BDC");

                    b.HasIndex("ProfesorId");

                    b.ToTable("Clases");
                });

            modelBuilder.Entity("Proyecto_Gestion_Escolar_Horarios.Models.Dia", b =>
                {
                    b.Property<int>("DiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiaId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DiaId")
                        .HasName("PK__Dias__ED194C767FD12FCD");

                    b.HasIndex(new[] { "Nombre" }, "UQ__Dias__75E3EFCFB07ED18C")
                        .IsUnique();

                    b.ToTable("Dias");
                });

            modelBuilder.Entity("Proyecto_Gestion_Escolar_Horarios.Models.Estudiante", b =>
                {
                    b.Property<int>("EstudianteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstudianteId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("EstudianteId")
                        .HasName("PK__Estudian__6F7682D8FA8E795D");

                    b.HasIndex(new[] { "Email" }, "UQ__Estudian__A9D10534BBE9D8C1")
                        .IsUnique();

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("Proyecto_Gestion_Escolar_Horarios.Models.Horario", b =>
                {
                    b.Property<int>("HorarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HorarioId"));

                    b.Property<int>("AulaId")
                        .HasColumnType("int");

                    b.Property<int>("ClaseId")
                        .HasColumnType("int");

                    b.Property<int>("DiaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<TimeOnly>("HoraFin")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("HoraInicio")
                        .HasColumnType("time");

                    b.HasKey("HorarioId")
                        .HasName("PK__Horarios__BB881B7E352A0829");

                    b.HasIndex("AulaId");

                    b.HasIndex("ClaseId");

                    b.HasIndex("DiaId");

                    b.ToTable("Horarios");
                });

            modelBuilder.Entity("Proyecto_Gestion_Escolar_Horarios.Models.HorarioAsignatura", b =>
                {
                    b.Property<int>("HorarioAsignaturaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HorarioAsignaturaId"));

                    b.Property<int>("DiaId")
                        .HasColumnType("int");

                    b.Property<int>("HorarioId")
                        .HasColumnType("int");

                    b.Property<int>("ProfesorId")
                        .HasColumnType("int");

                    b.HasKey("HorarioAsignaturaId")
                        .HasName("PK__HorarioA__C17169C99D79096B");

                    b.HasIndex("DiaId");

                    b.HasIndex("HorarioId");

                    b.HasIndex("ProfesorId");

                    b.ToTable("HorarioAsignatura", (string)null);
                });

            modelBuilder.Entity("Proyecto_Gestion_Escolar_Horarios.Models.HorarioDia", b =>
                {
                    b.Property<int>("HorarioDiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HorarioDiaId"));

                    b.Property<int>("DiaId")
                        .HasColumnType("int");

                    b.Property<int>("HorarioId")
                        .HasColumnType("int");

                    b.HasKey("HorarioDiaId")
                        .HasName("PK__HorarioD__C21830CAB5EA53D3");

                    b.HasIndex("DiaId");

                    b.HasIndex("HorarioId");

                    b.ToTable("HorarioDias");
                });

            modelBuilder.Entity("Proyecto_Gestion_Escolar_Horarios.Models.Inscripciones", b =>
                {
                    b.Property<int>("InscripcionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InscripcionId"));

                    b.Property<int>("ClaseId")
                        .HasColumnType("int");

                    b.Property<int>("EstudianteId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("InscripcionId")
                        .HasName("PK__Inscripc__168316B9214670C7");

                    b.HasIndex("ClaseId");

                    b.HasIndex(new[] { "EstudianteId", "ClaseId" }, "UK_Inscripciones")
                        .IsUnique();

                    b.ToTable("Inscripciones");
                });

            modelBuilder.Entity("Proyecto_Gestion_Escolar_Horarios.Models.Profesores", b =>
                {
                    b.Property<int>("ProfesorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfesorId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProfesorId")
                        .HasName("PK__Profesor__4DF3F0C8946A89C7");

                    b.HasIndex(new[] { "Email" }, "UQ__Profesor__A9D10534CC7F3E50")
                        .IsUnique();

                    b.ToTable("Profesores");
                });

            modelBuilder.Entity("Proyecto_Gestion_Escolar_Horarios.Models.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpirationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Proyecto_Gestion_Escolar_Horarios.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Proyecto_Gestion_Escolar_Horarios.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto_Gestion_Escolar_Horarios.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Proyecto_Gestion_Escolar_Horarios.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Proyecto_Gestion_Escolar_Horarios.Models.Clase", b =>
                {
                    b.HasOne("Proyecto_Gestion_Escolar_Horarios.Models.Profesores", "Profesor")
                        .WithMany("Clases")
                        .HasForeignKey("ProfesorId")
                        .IsRequired()
                        .HasConstraintName("FK__Clases__Profesor__2D27B809");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("Proyecto_Gestion_Escolar_Horarios.Models.Horario", b =>
                {
                    b.HasOne("Proyecto_Gestion_Escolar_Horarios.Models.Aula", "Aula")
                        .WithMany("Horarios")
                        .HasForeignKey("AulaId")
                        .IsRequired()
                        .HasConstraintName("FK__Horarios__AulaId__37A5467C");

                    b.HasOne("Proyecto_Gestion_Escolar_Horarios.Models.Clase", "Clase")
                        .WithMany("Horarios")
                        .HasForeignKey("ClaseId")
                        .IsRequired()
                        .HasConstraintName("FK__Horarios__ClaseI__36B12243");

                    b.HasOne("Proyecto_Gestion_Escolar_Horarios.Models.Dia", "Dia")
                        .WithMany("Horarios")
                        .HasForeignKey("DiaId")
                        .IsRequired()
                        .HasConstraintName("FK__Horarios__DiaId__38996AB5");

                    b.Navigation("Aula");

                    b.Navigation("Clase");

                    b.Navigation("Dia");
                });

            modelBuilder.Entity("Proyecto_Gestion_Escolar_Horarios.Models.HorarioAsignatura", b =>
                {
                    b.HasOne("Proyecto_Gestion_Escolar_Horarios.Models.Dia", "Dia")
                        .WithMany("HorarioAsignaturas")
                        .HasForeignKey("DiaId")
                        .IsRequired()
                        .HasConstraintName("FK__HorarioAs__DiaId__412EB0B6");

                    b.HasOne("Proyecto_Gestion_Escolar_Horarios.Models.Horario", "Horario")
                        .WithMany("HorarioAsignaturas")
                        .HasForeignKey("HorarioId")
                        .IsRequired()
                        .HasConstraintName("FK__HorarioAs__Horar__403A8C7D");

                    b.HasOne("Proyecto_Gestion_Escolar_Horarios.Models.Profesores", "Profesor")
                        .WithMany("HorarioAsignaturas")
                        .HasForeignKey("ProfesorId")
                        .IsRequired()
                        .HasConstraintName("FK__HorarioAs__Profe__4222D4EF");

                    b.Navigation("Dia");

                    b.Navigation("Horario");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("Proyecto_Gestion_Escolar_Horarios.Models.HorarioDia", b =>
                {
                    b.HasOne("Proyecto_Gestion_Escolar_Horarios.Models.Dia", "Dia")
                        .WithMany("HorarioDia")
                        .HasForeignKey("DiaId")
                        .IsRequired()
                        .HasConstraintName("FK__HorarioDi__DiaId__3D5E1FD2");

                    b.HasOne("Proyecto_Gestion_Escolar_Horarios.Models.Horario", "Horario")
                        .WithMany("HorarioDia")
                        .HasForeignKey("HorarioId")
                        .IsRequired()
                        .HasConstraintName("FK__HorarioDi__Horar__3C69FB99");

                    b.Navigation("Dia");

                    b.Navigation("Horario");
                });

            modelBuilder.Entity("Proyecto_Gestion_Escolar_Horarios.Models.Inscripciones", b =>
                {
                    b.HasOne("Proyecto_Gestion_Escolar_Horarios.Models.Clase", "Clase")
                        .WithMany("Inscripciones")
                        .HasForeignKey("ClaseId")
                        .IsRequired()
                        .HasConstraintName("FK__Inscripci__Clase__47DBAE45");

                    b.HasOne("Proyecto_Gestion_Escolar_Horarios.Models.Estudiante", "Estudiante")
                        .WithMany("Inscripciones")
                        .HasForeignKey("EstudianteId")
                        .IsRequired()
                        .HasConstraintName("FK__Inscripci__Estud__46E78A0C");

                    b.Navigation("Clase");

                    b.Navigation("Estudiante");
                });

            modelBuilder.Entity("Proyecto_Gestion_Escolar_Horarios.Models.Aula", b =>
                {
                    b.Navigation("Horarios");
                });

            modelBuilder.Entity("Proyecto_Gestion_Escolar_Horarios.Models.Clase", b =>
                {
                    b.Navigation("Horarios");

                    b.Navigation("Inscripciones");
                });

            modelBuilder.Entity("Proyecto_Gestion_Escolar_Horarios.Models.Dia", b =>
                {
                    b.Navigation("HorarioAsignaturas");

                    b.Navigation("HorarioDia");

                    b.Navigation("Horarios");
                });

            modelBuilder.Entity("Proyecto_Gestion_Escolar_Horarios.Models.Estudiante", b =>
                {
                    b.Navigation("Inscripciones");
                });

            modelBuilder.Entity("Proyecto_Gestion_Escolar_Horarios.Models.Horario", b =>
                {
                    b.Navigation("HorarioAsignaturas");

                    b.Navigation("HorarioDia");
                });

            modelBuilder.Entity("Proyecto_Gestion_Escolar_Horarios.Models.Profesores", b =>
                {
                    b.Navigation("Clases");

                    b.Navigation("HorarioAsignaturas");
                });
#pragma warning restore 612, 618
        }
    }
}
